{"name":"Github tutorial","tagline":"Karl's primitive tutorial on github and git","body":"I love [git](http://git-scm.com/) and [github](http://github.com).  I use both for keeping track of programming projects, papers, talks, and data analyses.  And github has enabled me to contribute at least minor things to others' projects, like the [D phobos library](https://github.com/D-Programming-Language/phobos) and [d3-tip](https://github.com/Caged/d3-tip).\r\n\r\nI use git mostly from the command line on a Mac.  I use the github site to explore others' code, make pull requests, and indicate issues.\r\n\r\nI would like all of my statistical/computational collaborators to use git and github, so that we may share code more easily.  But for statisticians with no history of use of version control, it can be hard to get started.  This is a tutorial of sorts, to help them get started.\r\n\r\n- first time: get account; set up ssh\r\n\r\n- typical use: add, commit, push\r\n\r\n- start new repository: from scratch; using current project\r\n\r\n- my friend wants to contribute code/changes\r\n\r\n- I want to fix a bug in someone's project\r\n\r\n- A package I'm using has a bug but I can't figure out how to fix it\r\n\r\n- Oops; that last commit message was wrong\r\n\r\n- Exploring what I've done\r\n\r\n- Song of github\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}